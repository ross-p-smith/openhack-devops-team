pipeline { 
    agent any 
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') { 
            steps {
                checkout scm

                script {
                    // Get the Terraform tool.
                    def dockerHome = tool name: 'LatestDocker'
                    env.PATH = "${dockerHome}:${env.PATH}"

                    docker.withRegistry('https://openhackib74acr.azurecr.io', 'OpenHack-ACR') {
                        def poi = docker.build("openhackib74acr/poi:1", "./apis/poi/web")
                        poi.push()

                        def trips = docker.build("openhackib74acr/trips:1", "./apis/trips")
                        trips.push()
                        
                        def userjava = docker.build("openhackib74acr/userjava:1", "./apis/user-java")
                        userjava.push()

                        def userprofile = docker.build("openhackib74acr/userprofile:1", "./apis/userprofile")
                        userprofile.push()
                    }
                    
                    // sh "git rev-parse HEAD > .git/commit-id"
                    // def commit_id = readFile('.git/commit-id').trim()
                    // println commit_id
                }
            }
        }
    }
}